{"version":3,"sources":["firebase.js","components/Header.js","features/appSlice.js","components/SidebarOption.js","components/Sidebar.js","components/ChatInput.js","components/Message.js","components/Chat.js","components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","HeaderComponent","HeaderLeft","HeaderAvatar","onClick","signOut","alt","displayName","src","photoURL","HeaderSearch","placeholder","HeaderRight","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","app","SidebarOption","Icon","title","addChannelOption","id","dispatch","useDispatch","SidebarOptionContainer","channelName","prompt","collection","add","fontSize","style","padding","SidebarOptionChannel","h3","Sidebar","useCollection","channels","SidebarContainer","SidebarHeader","SidebarInfo","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","docs","map","doc","data","ChatInput","channelId","chatRef","useState","input","setInput","ChatInputContainer","value","onChange","e","target","Button","hidden","type","preventDefault","message","timestamp","FieldValue","serverTimestamp","userImage","current","scrollIntoView","behavior","Message","MessageContainer","MessageInfo","Date","toDate","toUTCString","Chat","useSelector","useRef","useDocument","roomDetails","orderBy","roomMessages","loading","console","log","useEffect","ChatContainer","ChatMessages","ChatButtom","ref","Login","LoginContainer","LoginInnerContainer","signInWithPopup","catch","error","alert","App","AppLoading","AppLoadingContents","color","fadeIn","className","AppBody","exact","path","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef893c4a.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBJsMA8cWQRoFXreT1lCwKsjU2d12XD5x0\",\n  authDomain: \"slack-clone-yt-124b1.firebaseapp.com\",\n  projectId: \"slack-clone-yt-124b1\",\n  storageBucket: \"slack-clone-yt-124b1.appspot.com\",\n  messagingSenderId: \"134389289467\",\n  appId: \"1:134389289467:web:d6a87dbda546c975eb3b5e\",\n  measurementId: \"G-02Z7JE098R\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, db, provider };\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Avatar } from \"@material-ui/core\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport { auth } from \"../firebase\";\n\nfunction Header() {\n  const [user] = useAuthState(auth);\n  return (\n    <HeaderComponent>\n      <HeaderLeft>\n        <HeaderAvatar\n          onClick={() => auth.signOut()}\n          alt={user?.displayName}\n          src={user?.photoURL}\n        />\n        <AccessTimeIcon />\n      </HeaderLeft>\n      <HeaderSearch>\n        <SearchIcon />\n        <input placeholder=\"Search Slack\" />\n      </HeaderSearch>\n      <HeaderRight>\n        <HelpOutlineIcon />\n      </HeaderRight>\n    </HeaderComponent>\n  );\n}\n\nexport default Header;\n\nconst HeaderRight = styled.div`\n  flex: 0.3;\n  display: flex;\n  align-items: flex-end;\n  \n  > .MuiSvgIcon-root {\n  margin-left: auto;\n  margin-right: 20px;\n`;\n\nconst HeaderSearch = styled.div`\n  flex: 0.4;\n  opacity: 1;\n  border-radius: 10px;\n  background-color: transparent;\n  text-align: center;\n  display: flex;\n  padding: 0 50px;\n  color: white;\n  border: 1px gray solid;\n  \n  >input {\n  background-color: transparent;\n  border: none;\n  text-align: center;\n    padding: 0 50px;\n  min-width: 30px;\n  color: white;\n  outline: 0;\n  \n  >placeholder {\n  color: white;\n  }\n`;\n\nconst HeaderComponent = styled.div`\n  display: flex;\n  position: fixed;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n  padding 10px 0;\n  background-color: var(--slack-color);\n  color: white;\n`;\nconst HeaderLeft = styled.div`\n  flex: 0.3;\n  display: flex;\n  align-items: center;\n  margin-left: 20px;\n\n  > .MuiSvgIcon-root {\n    margin-left: auto;\n    margin-right: 30px;\n  }\n`;\nconst HeaderAvatar = styled(Avatar)`\ncursor: pointer;\n\n:hover {\nopacity: 0.5;\n`;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const appSlice = createSlice({\n  name: \"app\",\n  initialState: {\n    roomId: null,\n  },\n  reducers: {\n    enterRoom: (state, action) => {\n      state.roomId = action.payload.roomId;\n    },\n  },\n});\n\nexport const { enterRoom } = appSlice.actions;\n\nexport const selectRoomId = (state) => state.app.roomId;\n\nexport default appSlice.reducer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { db } from \"../firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { enterRoom } from \"../features/appSlice\";\n\nfunction SidebarOption({ Icon, title, addChannelOption, id }) {\n  const dispatch = useDispatch();\n\n  const addChannel = () => {\n    const channelName = prompt(\"Please enter the channel name\");\n\n    if (channelName) {\n      db.collection(\"rooms\").add({\n        name: channelName,\n      });\n    }\n  };\n\n  const selectChannel = () => {\n    if (id) {\n      dispatch(\n        enterRoom({\n          roomId: id,\n        })\n      );\n    }\n  };\n\n  return (\n    <SidebarOptionContainer\n      onClick={addChannelOption ? addChannel : selectChannel}\n    >\n      {Icon && <Icon fontSize=\"small\" style={{ padding: 10 }} />}\n      {Icon ? (\n        <h3>{title}</h3>\n      ) : (\n        <SidebarOptionChannel>\n          <span>#</span>\n          {title}\n        </SidebarOptionChannel>\n      )}\n    </SidebarOptionContainer>\n  );\n}\n\nexport default SidebarOption;\n\nconst SidebarOptionContainer = styled.div`\n  display: flex;\n  font-size: 12px;\n  align-items: center;\n  padding-left: 2px;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.5;\n    background-color: #340e36;\n  }\n\n  > h3 {\n    font-weight: 500;\n  }\n\n  > h3 > span {\n    padding: 15px;\n  }\n`;\nconst SidebarOptionChannel = styled.h3`\n  padding: 10px 0;\n  font-weight: 300;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport SidebarOption from \"./SidebarOption\";\nimport InsertCommentIcon from \"@material-ui/icons/InsertComment\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\nimport { auth, db } from \"../firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nfunction Sidebar() {\n  const [channels] = useCollection(db.collection(\"rooms\"));\n  const [user] = useAuthState(auth);\n\n  return (\n    <SidebarContainer>\n      <SidebarHeader>\n        <SidebarInfo>\n          <h2>PAPA FAM HQ</h2>\n          <h3>\n            <FiberManualRecordIcon />\n            {user.displayName}\n          </h3>\n        </SidebarInfo>\n        <CreateIcon />\n      </SidebarHeader>\n\n      <SidebarOption Icon={InsertCommentIcon} title=\"Threads\" />\n      <SidebarOption Icon={InboxIcon} title=\"Mention & reactions\" />\n      <SidebarOption Icon={DraftsIcon} title=\"Saved items\" />\n      <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel browser\" />\n      <SidebarOption Icon={PeopleAltIcon} title=\"People & user groups \" />\n      <SidebarOption Icon={AppsIcon} title=\" Apps \" />\n      <SidebarOption Icon={FileCopyIcon} title=\" File browser \" />\n      <SidebarOption Icon={ExpandLessIcon} title=\" Show less \" />\n      <hr />\n      <SidebarOption Icon={ExpandMoreIcon} title=\" Channels \" />\n      <hr />\n      <SidebarOption Icon={AddIcon} addChannelOption title=\" Add Channel \" />\n\n      {channels?.docs.map((doc) => (\n        <SidebarOption key={doc.id} id={doc.id} title={doc.data().name} />\n      ))}\n    </SidebarContainer>\n  );\n}\n\nexport default Sidebar;\n\nconst SidebarContainer = styled.div`\n  color: white;\n  background-color: var(--slack-color);\n  flex: 0.3;\n  border-top: 1px solid #49274b;\n  max-width: 260px;\n  margin-top: 60px;\n  overflow-y: scroll;\n\n  > hr {\n    margin-top: 10px;\n    margin-bottom: 10px;\n    border: 1px solid #49274b;\n  }\n`;\nconst SidebarHeader = styled.div`\n  display: flex;\n  border-bottom: 1px solid #49274b;\n  padding: 13px;\n\n  > .MuiSvgIcon-root {\n    padding: 8px;\n    color: #49274b;\n    font-size: 18px;\n    background-color: white;\n    border-radius: 999px;\n  }\n`;\nconst SidebarInfo = styled.div`\n  flex: 1;\n\n  > h2 {\n    font-size: 15px;\n    font-weight: 900;\n    margin-bottom: 5px;\n  }\n\n  > h3 {\n    display: flex;\n    font-size: 13px;\n    font-weight: 400;\n    align-items: center;\n  }\n\n  > h3 > .MuiSvgIcon-root {\n    font-size: 14px;\n    margin-top: 1px;\n    margin-right: 2px;\n    color: green;\n  }\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\nimport { auth, db } from \"../firebase\";\nimport firebase from \"firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nfunction ChatInput({ channelName, channelId, chatRef }) {\n  const [input, setInput] = useState(\"\");\n  const [user] = useAuthState(auth);\n\n  const sendMessage = (e) => {\n    e.preventDefault(); //Prevents refresh\n\n    if (!channelId) {\n      return false;\n    }\n\n    db.collection(\"rooms\").doc(channelId).collection(\"messages\").add({\n      message: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      user: user.displayName,\n      userImage: user.photoURL,\n    });\n\n    chatRef?.current?.scrollIntoView({\n      behavior: \"smooth\",\n    });\n\n    setInput(\"\");\n  };\n\n  return (\n    <ChatInputContainer>\n      <form>\n        <input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder={`Message # ${channelName}`}\n        />\n        <Button hidden type=\"submit\" onClick={sendMessage}>\n          SEND\n        </Button>\n      </form>\n    </ChatInputContainer>\n  );\n}\n\nexport default ChatInput;\n\nconst ChatInputContainer = styled.div`\n  border-radius: 20px;\n\n  > form {\n    position: relative;\n    display: flex;\n    justify-content: center;\n  }\n\n  > form > input {\n    position: fixed;\n    bottom: 30px;\n    width: 60%;\n    border: 1px solid gray;\n    border-radius: 20px;\n    padding: 20px;\n    outline: none;\n  }\n\n  > form > button {\n    display: none !important;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction Message({ message, timestamp, user, userImage }) {\n  return (\n    <MessageContainer>\n      <img src={userImage} alt=\"\" />\n      <MessageInfo>\n        <h4>\n          {user}\n          {\"\"}\n          <span>{new Date(timestamp?.toDate()).toUTCString()}</span>\n        </h4>\n        <p>{message}</p>\n      </MessageInfo>\n    </MessageContainer>\n  );\n}\n\nexport default Message;\n\nconst MessageContainer = styled.div`\n  display: flex;\n  align-item: center;\n  padding: 20px;\n\n  > img {\n    height: 50px;\n    border-radius: 8px;\n  }\n`;\nconst MessageInfo = styled.div`\n  padding-left: 10px;\n\n  > h4 > span {\n    color: gray;\n    font-weight: 300;\n    margin-left: 4px;\n    font-size: 10px;\n  }\n`;\n","import React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\nimport { useSelector } from \"react-redux\";\nimport { selectRoomId } from \"../features/appSlice\";\nimport ChatInput from \"./ChatInput\";\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\";\nimport { db } from \"../firebase\";\nimport Message from \"./Message\";\n\nfunction Chat() {\n  const roomId = useSelector(selectRoomId);\n  const chatRef = useRef(null);\n  const [roomDetails] = useDocument(\n    roomId && db.collection(\"rooms\").doc(roomId)\n  );\n\n  const [roomMessages, loading] = useCollection(\n    roomId &&\n      db\n        .collection(\"rooms\")\n        .doc(roomId)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"asc\")\n  );\n  console.log(roomMessages);\n  useEffect(() => {\n    chatRef?.current?.scrollIntoView({\n      behavior: \"smooth\",\n    });\n  }, [roomId, loading]);\n\n  return (\n    <ChatContainer>\n      {roomDetails && roomMessages && (\n        <>\n          <Header>\n            <HeaderLeft>\n              <h4>\n                <strong>#{roomDetails?.data().name}</strong>\n              </h4>\n              <StarBorderOutlinedIcon />\n            </HeaderLeft>\n            <HeaderRight>\n              <p>\n                <InfoOutlinedIcon /> Details\n              </p>\n            </HeaderRight>\n          </Header>\n\n          <ChatMessages>\n            {roomMessages?.docs.map((doc) => {\n              const { message, timestamp, user, userImage } = doc.data();\n\n              return (\n                <Message\n                  key={doc.id}\n                  message={message}\n                  timestamp={timestamp}\n                  user={user}\n                  userImage={userImage}\n                />\n              );\n            })}\n            <ChatButtom ref={chatRef} />\n          </ChatMessages>\n\n          <ChatInput\n            chatRef={chatRef}\n            channelName={roomDetails?.data().name}\n            channelId={roomId}\n          />\n        </>\n      )}\n    </ChatContainer>\n  );\n}\n\nexport default Chat;\nconst ChatButtom = styled.div`\n  padding-bottom: 200px;\n`;\n\nconst ChatMessages = styled.div``;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n  border-bottom: 1px solid lightgray;\n`;\nconst HeaderLeft = styled.div`\n  display: flex;\n\n  > h4 {\n    display: flex;\n    text-transform: lowercase;\n    margin-right: 10px;\n  }\n  > h4 > .MuiSvgIcon-root {\n    margin-left: 10px;\n    font-size: 18px;\n  }\n`;\nconst HeaderRight = styled.div`\n  > p {\n    display: flex;\n    align-items: center;\n    font-size: 14px;\n  }\n\n  > p > .MuiSvgIcon-root {\n    margin-right: 5px !important;\n    font-size: 16px;\n  }\n`;\n\nconst ChatContainer = styled.div`\n  flex: 0.7;\n  flex-grow: 1;\n  overflow-y: scroll;\n  margin: 60px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\nimport { auth, provider } from \"../firebase\";\n\nfunction Login() {\n  const signIn = (e) => {\n    e.preventDefault();\n    auth.signInWithPopup(provider).catch((error) => {\n      alert(error.message);\n    });\n  };\n\n  return (\n    <LoginContainer>\n      <LoginInnerContainer>\n        <img\n          src=\"https://logos-world.net/wp-content/uploads/2020/10/Slack-Logo-2019-present.jpg\"\n          alt=\"\"\n        />\n        <h1>Sign In To Slack Clone</h1>\n        <p>created by Mohamed Ali Boullo</p>\n        <Button onClick={signIn}>Sign in with Google</Button>\n      </LoginInnerContainer>\n    </LoginContainer>\n  );\n}\n\nexport default Login;\n\nconst LoginContainer = styled.div`\n  background-color = #f8f8f8;\n  height: 100vh;\n  display: grid;\n  place-items: center;\n`;\nconst LoginInnerContainer = styled.div`\n  padding: 100px;\n  text-align: center;\n  background-color: white;\n  border-radius: 50px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n\n  > img {\n    object-fit: contain;\n    height: 100px;\n    margin-bottom: center;\n  }\n\n  > button {\n    margin-top: 50px;\n    text-transform: inherit !important;\n    background-color: #0a8d48 !important;\n    color: white;\n  }\n`;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport styled from \"styled-components\";\nimport Sidebar from \"./components/Sidebar\";\nimport Chat from \"./components/Chat\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"./firebase\";\nimport Login from \"./components/Login\";\nimport Spinner from \"react-spinkit\";\n\nfunction App() {\n  const [user, loading] = useAuthState(auth);\n\n  if (loading) {\n    return (\n      <AppLoading>\n        <AppLoadingContents>\n          <img\n            src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg\"\n            alt=\"\"\n          />\n          <Spinner name=\"ball-spin-fade-loader\" color=\"purple\" fadeIn=\"none\" />\n        </AppLoadingContents>\n      </AppLoading>\n    );\n  }\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <Login />\n        ) : (\n          <>\n            <Header />\n            <AppBody>\n              <Sidebar />\n              <Switch>\n                <Route exact path=\"/\">\n                  <Chat />\n                </Route>\n              </Switch>\n            </AppBody>\n          </>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nconst AppLoading = styled.div`\n  display: grid;\n  place-items: center;\n  height: 100vh;\n  width: 100%;\n`;\n\nconst AppLoadingContents = styled.div`\n  text-align: center;\n  padding-bottom: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  > img {\n    height: 100px;\n    padding: 20px;\n    margin-bottom: 40px;\n  }\n`;\n\nconst AppBody = styled.div`\n  display: flex;\n  height: 100vh;\n`;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport appReducer from \"../features/appSlice\";\n\nexport default configureStore({\n  reducer: {\n    app: appReducer,\n  },\n});\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}